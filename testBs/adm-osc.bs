<pre class='metadata'>
Title: ADM-OSC
Shortname: ADM-OSC
Logo: https://immersive-audio-live.github.io/ADM-OSC/assets/images/logo.png
Boilerplate: logo yes, copyright no, footer no
Level: none
Status: LS
URL: https://immersive-audio-live.github.io/ADM-OSC/
Repository: immersive-audio-live/ADM-OSC
Test Suite: https://github.com/immersive-audio-live/ADM-OSC/tree/main/tests
Editor: Mathieu Delquignies, d&amp;b audiotechnik https://www.dbaudio.com/, mathieu.delquignies@dbaudio.com
Editor: Michael Zbyszynski, L-Acoustics http://example.com/your-company, michael.zbyszynskki@l-acoustics.com
Inline Github Issues: true
Abstract: An industry initiative for standardization of [=Object-Based Audio=] positioning data in live production ecosystems by implementing the Audio Definition Model (ADM) over Open Sound Control (OSC).
</pre>

<img src=[LOGO] alt="ADM-OSC logo" width="150">

Introduction {#intro}
=====================

ADM-OSC has been designed to solve real problems for live and broadcast sound producers. Since 2019, a growing workgroup of industry stakeholders from live music and broadcast domains has gathered to exchange needs and experiences from real life production cases. Those companies have already expressed interest or have implemented ADM-OSC: Atlas, Adamson, Amadeus Acoustics GmbH, BBC, d&amp;b audiotechnik, DiGiCo, Dolby, FLUX::SE, FollowMe, Grapes3D, Holophonix, L-Acoustics, Lawo, Merging Technologies, Meyer Sound, Naostage, Radio-France, Steinberg etc. [[EBU-Tech-3396]]

[=OBA=]

## Motivation &amp; goals

- To facilitate the sharing of audio objects metadata between a live ecosystem and a broadcast or studio ecosystem.
- To define a basic layer of interoperability between Object Editors and Object renderers while not aiming at replacing more complete manufacturer specific protocols or grammars.
- To define a direct translation of the most relevant ADM Object Properties onto a communication protocol widely used in the live industry, OSC.
- Keeping the grammar scope aligned with the ADM properties.
- Share this proposal with the EBU so they can become a relay, publish and support this initiative.
- Extend this small grammar to more ADM properties (beds, etc.) in the future.

# Summary of version 1.0

# v0.4

## polar position messages

<table class="def">
    <thead>
        <tr>
            <th>address</th>
            <th>type</th>
            <th>units</th>               
            <th>min</th>
            <th>max</th>
            <th>default</th>
            <th>description</th>
            <th>example</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>/elev</td>
            <td>float</td>
            <td>degrees</td>
            <td>-90.0</td>
            <td>90.0</td>
            <td>-</td>
            <td><b>elevation</b> “phi - &#632;” of sound location</td>
            <td>/adm/obj/4/elev 12.7</td>
        </tr>
        <tr>
            <td>/dist</td>
            <td>float</td>
            <td>normalized</td>
            <td>0.0</td>
            <td>1.0</td>
            <td>1.0</td>
            <td><b>distance</b> “r” from origin</td>
            <td>/adm/obj/4/dist 0.9</td>
        </tr>
        <tr>
            <td>/aed</td>
            <td>list</td>
            <td colspan=4>see above</td>
            <td>compact format enables synchronicity of position changes and also less network traffic</td>
            <td>/adm/obj/4/aed -22.5 12.7 0.9</td>
        </tr>
        <tr>
            <td>/gain</td>
            <td>float</td>
            <td>linear</td>
            <td>0.</td>
            <td></td>
            <td>1.0</td>
            <td>Apply a gain to the audio in the object.</td>
            <td>/adm/obj/3/gain 0.707</td>
        </tr>
    </tbody>
</table>

<pre class=simpledef> 
address: /adm/obj/n/x
type: float
units: degrees
</pre>

## Cartesian position messages

<table class="def">
    <thead>
        <tr>
            <th colspan=2>osc address</th>
            <th>type</th>
            <th>units</th>
            <th>min</th>
            <th>max</th>
            <th>default</th>
            <th>description</th>
            <th>example</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td rowspan=6>/adm/obj/<i>n</i></td>
            <td>/x</td>
            <td>float</td>
            <td>normalized</td>
            <td>-1.0</td>
            <td>1.0</td>
            <td>0.0</td>
            <td>left/right dimension. -1 is left</td>
            <td>/adm/obj/4/x -0.9</td>
        </tr>
        <tr>
            <td>/y</td>
            <td>float</td>
            <td>normalized</td>
            <td>-1.0</td>
            <td>1.0</td>
            <td>0.0</td>
            <td>front/back dimension. 1 is front</td>
            <td>/adm/obj/4/y 0.15</td>
        </tr>
        <tr>
            <td>/z</td>
            <td>float</td>
            <td>normalized</td>
            <td>-1.0</td>
            <td>1.0</td>
            <td>0.0</td>
            <td>top/bottom dimension. 1 is top</td>
            <td>/adm/obj/4/z 0.7</td>

        </tr>
        <tr>
                        <td>/xyz</td>
                        <td>list</td>
                        <td colspan=4>see above</td>
                        <td>compact format enables synchronicity of position changes and also less network traffic</td>
                        <td>/adm/obj/4/xyz -0.9 0.15 0.7</td>
        </tr>
        <tr>
                        <td>/w</td>
                        <td>float</td>
                        <td>normalized</td>
                        <td>0.0</td>
                        <td>1.0</td>
                        <td>0.0</td>
                        <td>horizontal extent in normalized units</td>
                        <td>/adm/obj/3/w 0.2</td>
        </tr>
        <tr>
            <td>/gain</td>
            <td>float</td>
            <td>linear</td>
            <td>0.</td>
                    <td></td>
                    <td>1.0</td>
                    <td>Apply a gain to the audio in the object.</td>
                    <td>/adm/obj/3/gain 0.707</td>
        </tr>
    </tbody>
</table>

## configuration messages 

<table class="def">
    <thead>
        <tr>
            <th colspan=2>osc address</th>
            <th>type</th>
            <th>units</th>
            <th>min</th>
            <th>max</th>
            <th>default</th>
            <th>description</th>
            <th>example</th>
            <th>status</th>
        </tr>
    </thead>
    <tbody>
                    <tr>
                        <td rowspan=3>/adm/obj/<i>n</i>/config</td>
                        <td>/cartesian</td>
                        <td>int</td>
                        <td>0/1</td>
                        <td>0</td>
                        <td>1</td>
                        <td>0</td>
                        <td>If the flag is set to 1, Cartesian coordinates are used. Otherwise spherical coordinates are
                            used.</td>
                        <td>/adm/config/obj/1/cartesian 0</td>
                        <td class="stable">stable v0.4</td>
                    </tr>
                    <tr>
                        <td>/dMax</td>
                        <td>float</td>
                        <td>meters</td>
                        <td>0.</td>
                        <td></td>
                        <td></td>
                        <td>Distance signified by a normalized dRef value of 1</td>
                        <td>/adm/config/obj/1/dMax 21.3</td>
                        <td class="inProgress"><a href="https://github.com/immersive-audio-live/ADM-OSC/issues/12">in
                            progress</a></td>
        </tr>
        <tr>
                        <td>/dRef</td>
                        <td>float</td>
                        <td>normalized</td>
                        <td>0.0</td>
                        <td>1.0</td>
                        <td>1.0</td>
                        <td>Distance where dimensionless rendering is replaced with with physics-based rendering.</td>
                        <td>/adm/config/obj/1/dRef 0.2</td>
                        <td class="inProgress"><a href="https://github.com/immersive-audio-live/ADM-OSC/issues/12">in
                            progress</a></td>
        </tr>
    </tbody>
</table>

Implementation Matrix {#implementation}
=====================

Issue(immersive-audio-live/adm-osc#24):

ADM-OSC principals {#basics}
=====================

## Roles

### Sender (client)

- Object Editor sending positioning data to one or more receivers.
- Position data is always normalized

### Receiver (server)

- Handles the (optional) local scaling of normalized data: x, y, z, distance
- The receiver can be a DAW, an ADM renderer, an object editor, a bridge (ADM-OSC <-> sADM)

## Relationship to ADM

ADM-OSC messages are designed to be translatable to (S-)ADM if needed. Messages that don't translate into one (or more) ADM tag should not be in the `/adm` namespace.

## Coordinates

NOTE: For Cartesian coordinates, values are normalized between -1 and 1. _x = 1_ is right, _y = 1_ is forward, _z = 1_ is up.

```
    (-1, 1) --------- (1, 1)  
       |                |  
       |                |  
       |                |  
       |                |  
    (-1, -1) ---------(1, -1)  
```

NOTE: For polar coordinates, 0&deg; azimuth is straight ahead. Positive azimuth is on the left, so a front-left speaker is +30&deg;. +90&deg; elevation is straight up.

### pol <--> car

The ADM relationship between polar and Cartesian coordinates is specified in section 10.1 of this document: [[EBU-BS-2127]]. This has some limitations (see issue 25 below) and could be extended to include more AR, VR, and game engine use cases.

Issue(immersive-audio-live/adm-osc#25):

Discussion {#discuss}
=====================

Issue(immersive-audio-live/adm-osc#33):

Definitions {#define}
=====================

<dfn dfn>OBA</dfn> see [=Object-Based Audio=]

<dfn>Object-Based Audio</dfn>

Object-based representation encodes audio tracks along with positional and other data about how that audio should be reproduced, or rendered, during playback. Positional data is speaker-agnostic, allowing object-based mixes to be highly portable. A musician might audition a mix on headphones using a binaural renderer then perform at a venue with dozens of loudspeakers using a spatial renderer. That mix might then be rendered for streaming with a third renderer. [[Tsingos-2017]]

<pre class='biblio'>
{
    "EBU-BS-2127" : {
        "title": "Audio Definition Model renderer for advanced sound systems" ,
        "status": "Spec",
        "publisher": "EBU",
        "href" : "https://www.itu.int/rec/R-REC-BS.2127"
    },
    "EBU-Tech-3396": {
	    "title": "BINAURAL EBU ADM RENDERER (BEAR) FOR OBJECT-BASED SOUND OVER HEADPHONES",
        "status": "Spec",
        "publisher": "EBU",
        "href": "https://tech.ebu.ch/publications/tech3396"
    },
    "Tsingos-2017": {
        "authors": [ "N. Tsingos" ],
        "title": "Object-based audio",
        "status": "in Immersive Sound",
        "pages": "244-275",
        "publisher": "Routledge",
        "date": "2017"
    }
}
</pre>